plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'io.freefair.lombok' version '6.4.1'
    id 'org.sonarqube' version '3.3'
}

group = 'ch.uzh.soprafs22'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
    implementation 'org.modelmapper:modelmapper:3.1.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
    }
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'sopra-fs22-group-4_group-matcher-backend'
        property 'sonar.organization', 'sopra-fs22-group-4'
        property 'sonar.host.url', 'https://sonarcloud.io'
    }
}

/**
 * Disable the Gradle task 'jar' to prevent generating a plain JAR, thus allowing only a fat
 * JAR (with all dependencies) to be generated via the task 'bootJar' when deploying the app.
 *
 * Solves a common Heroku bug where Heroku builds the plain JAR instead of the fat JAR, which
 * results in a successful build that crashes when starting the app. (Alternatively, you can
 * provide Heroku the exact filename of the fat JAR via a Procfile.)
 */
jar {
    enabled = false
}
